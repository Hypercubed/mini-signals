{"version":3,"sources":["../src/mini-signals.js"],"names":[],"mappings":"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","file":"mini-signals.js","sourcesContent":["/*jshint -W097 */\n\n/**\n * Representation of a single MiniSignal function.\n *\n * @param {Function} fn Event handler to be called.\n * @param {Mixed} context Context for function execution.\n * @api private\n */\n\nexport class MiniSignalBinding {\n  constructor(fn, once = false) {\n    this._fn = fn;\n    this._next = this._prev = null;\n    this._once = once;\n  }\n}\n\n/**\n * Minimal MiniSignal interface modeled against the js-signals\n * interface.\n */\nexport class MiniSignal {\n\n  constructor() {\n    this._head = this._tail = undefined;\n  }\n\n  /**\n  * Return a list of assigned event handels.\n  *\n  * @param {Boolean} exists We only need to know if there are handlers.\n  * @returns {Array|Boolean}\n  * @api public\n  */\n  handlers(exists) {\n    var node = this._head;\n\n    if (exists) { return !!node; }\n\n    var ee = [];\n\n    while (node) {\n      ee.push(node);\n      node = node._next;\n    }\n\n    return ee;\n  }\n\n  /**\n  * Emit an event to all registered event listeners.\n  *\n  * @returns {Boolean} Indication if we've emitted an event.\n  * @api public\n  */\n  dispatch() {\n    var node = this._head;\n\n    if (!node) { return false; }\n\n    while (node) {\n      node._fn.apply(this, arguments);\n      if (node._once) { this.detach(node); }\n      node = node._next;\n    }\n\n    return true;\n  }\n\n  /**\n  * Register a new listener.\n  *\n  * @param {Functon} fn Callback function.\n  * @param {Mixed} context The context of the function.\n  * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n  * @api public\n  */\n  add(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error( 'MiniSignal#add(): First arg must be a Function.' );\n    }\n    var node = new MiniSignalBinding(fn);\n    return this._addMiniSignalBinding(node);\n  }\n\n  /**\n   * Register a new listener that will be executed only once.\n   *\n   * @param {Functon} fn Callback function.\n   * @param {Mixed} context The context of the function.\n   * @return {MiniSignalBinding} An Object representing the binding between the Signal and listener.\n   * @api public\n   */\n  once(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error( 'MiniSignal#once(): First arg must be a Function.' );\n    }\n    var node = new MiniSignalBinding(fn, true);\n    return this._addMiniSignalBinding(node);\n  }\n\n  _addMiniSignalBinding(node) {\n    if (!this._head) {\n      this._head = node;\n      this._tail = node;\n    } else {\n      this._tail._next = node;\n      node._prev = this._tail;\n      this._tail = node;\n    }\n\n    var self = this;\n    node.detach = (function() {\n      self.detach(this);\n    }).bind(node);\n\n    return node;\n  }\n\n  /**\n  * Remove binding object.\n  *\n  * @param {MiniSignalBinding} node The binding node that will be removed.\n  * @api public */\n  detach(node) {\n    if (!(node instanceof MiniSignalBinding)) {\n      throw new Error( 'MiniSignal#detach(): First arg must be a MiniSignalBinding object.' );\n    }\n    if (!node._fn) { return this; }\n    if (node === this._head)  {  // first node\n      this._head = node._next;\n      if (!this._head){\n        this._tail = null;\n      } else {\n        this._head._prev = null;\n      }\n    } else if (node === this._tail) {  // last node\n      this._tail = node._prev;\n      this._tail._next = null;\n    } else {  // middle\n      node._prev._next = node._next;\n      node._next._prev = node._prev;\n    }\n    node._fn = null;\n    node._context = null;\n    return this;\n  }\n\n  /**\n  * Remove all listeners.\n  *\n  * @api public\n  */\n  removeAll() {\n    var node = this._head;\n    if (!node) { return this; }\n\n    this._head = this._tail = null;\n    return this;\n  }\n}\n\nexport default MiniSignal;\n"]}